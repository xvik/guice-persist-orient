plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'signing'
    id 'ru.vyarus.java-lib' version '2.3.0'
    id 'ru.vyarus.github-info' version '1.3.0'
    id 'ru.vyarus.quality' version '4.8.0'
    id 'net.researchgate.release' version '3.0.1'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'ru.vyarus.mkdocs' version '2.4.0'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '6.9'
}

ext {
    orient = '3.2.9'
    guice = '5.1.0'
}

repositories { mavenLocal(); mavenCentral() }
dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.7.1'

    implementation 'org.slf4j:slf4j-api:1.7.36'

    implementation 'ru.vyarus:generics-resolver:3.0.3'
    implementation 'ru.vyarus:guice-ext-annotations:1.4.0'
    implementation 'org.javassist:javassist:3.29.1-GA'
    implementation "com.google.inject:guice:$guice"
    implementation "com.google.inject.extensions:guice-persist:$guice"
    implementation "com.orientechnologies:orientdb-core:$orient"
    provided "com.orientechnologies:orientdb-object:$orient"
    provided "com.orientechnologies:orientdb-graphdb:$orient"
    provided "com.orientechnologies:orientdb-lucene:$orient"

    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    testImplementation 'org.slf4j:jul-to-slf4j:1.7.36'
    testImplementation 'org.spockframework:spock-guice:2.2-groovy-4.0'
    testImplementation 'ru.vyarus:guice-validator:2.0.0'
    testImplementation 'org.hibernate:hibernate-validator:6.2.0.Final'
    testImplementation 'org.glassfish:javax.el:3.0.1-b12'
    testImplementation "com.orientechnologies:orientdb-tools:$orient"
}

group = 'ru.vyarus'
description = 'Guice integration for OrientDB'

github {
    user = 'xvik'
    license = 'MIT'
}

mkdocs {
    publish {
        docPath = '4.1.0'
        rootRedirect = true
    }
    extras = [
            'version': '4.1.0'
    ]
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

javaLib {
    // java 9 auto module name
    autoModuleName = "ru.vyarus.guice.orient"
    // don't publish gradle metadata artifact
    withoutGradleMetadata()
    // use only direct dependencies in the generated pom, removing BOM mentions
    pom.removeDependencyManagement()
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// skip signing for jitpack (snapshots)
tasks.withType(Sign) {onlyIf { !System.getenv('JITPACK') }}

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

release.git.requireBranch.set('master')

afterReleaseBuild {
    dependsOn = ['publishToSonatype',
                 'closeAndReleaseSonatypeStagingRepository']
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    //useJUnitPlatform()
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    if (System.getenv("APPVEYOR")) {
        // test run only on unix build due to unstable behaviour on appveyor
        exclude "**/ConcurrentFailuresTest.class"
    }
    maxHeapSize = '1g'

    jacoco {
        excludes = ['com.orientechnologies.*']
    }
    // appveyor fix
    systemProperty 'jna.nosys', 'true'
}

dependencyUpdates.revision = 'release'
